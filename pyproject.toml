# --- MUST ADAPT THIS FILE FOR YOUR PROJECT ---
# --- Instructions below ---
#
# * Search and replace `jupyterhub-python-repo-template` with the name of your repository
# * Search after the `TODO` keyword and follow the instructions in the comment


# build-system
# - ref: https://peps.python.org/pep-0517/
#
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# project
# - ref 1: https://peps.python.org/pep-0621/
# - ref 2: https://hatch.pypa.io/latest/config/metadata/#project-metadata
#
[project]
# TODO: Change the name below with the name of your project
name = "jupyterhub-python-repo-template"
# TODO: Change the description below with a description of your project
description = "JupyterHub Python repository template"
readme = "README.md"
# TODO: Change the Python version below with the one relevant to your project
requires-python = ">=3.9"
license = {file = "LICENSE"}
# TODO: Add more keywords to the list that are relevant to your project
keywords = ["jupyterhub"]
authors = [
    {name = "Jupyter Contributors", email = "jupyter@googlegroups.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
]
# TODO: List the packages and pin them to a version that your project depends on
dependencies = [
    # NOTE: If lower bounds are updated, also update our test for the lower
    #       bounds in .github/workflows/test.yaml.
    "jupyterhub>=2.0.0",
]
dynamic = ["version"]

# TODO: List the packages and pin them to a version that the tests in your project depend on
[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
]

[project.urls]
Documentation = "https://jupyterhub-python-repo-template.readthedocs.io"
Source = "https://github.com/jupyterhub/jupyterhub-python-repo-template"
Issues = "https://github.com/jupyterhub/jupyterhub-python-repo-template/issues"


# hatch ref: https://hatch.pypa.io/latest/
#
[tool.hatch.version]
path = "jupyterhub-python-repo-template/_version.py"


# autoflake is used for autoformatting Python code
#
# ref: https://github.com/PyCQA/autoflake#readme
#
[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]
skip-string-normalization = false


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# pytest is used for running Python based tests
#
# ref: https://docs.pytest.org/en/stable/
#
[tool.pytest.ini_options]
addopts = "--verbose --color=yes --durations=10"
asyncio_mode = "auto"
testpaths = ["tests"]


# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
github_url = "https://github.com/jupyterhub/jupyterhub-python-repo-template"

[tool.tbump.version]
current = "0.0.1.dev0"
regex = '''
    (?P<major>\d+)
    \.
    (?P<minor>\d+)
    \.
    (?P<patch>\d+)
    (?P<pre>((a|b|rc)\d+)|)
    \.?
    (?P<dev>(?<=\.)dev\d*|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

[[tool.tbump.file]]
src = "jupyterhub-python-repo-template/_version.py"
